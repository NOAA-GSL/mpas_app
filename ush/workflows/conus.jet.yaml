user:
  cycle_frequency: 12
  experiment_dir: ""
  first_cycle: !!timestamp 2023-09-15T00:00:00
  last_cycle:  !!timestamp 2023-09-15T00:00:00
  mesh_label: hrrrv5
  mpas_app: ""
  platform: big_computer
  workflow_blocks:
    - cold_start.yaml
    - post.yaml
    - graphics.yaml
data:
  mesh_files: /misc/whome/role.wrfruc/HRRRv5/fix
platform:
  scheduler: slurm
get_ics_data:
  execution:
    cores: 1
    walltime: 00:10:00
  external_model: RAP 
  rundir: '{{ user.experiment_dir }}/{{ cycle.strftime("%Y%m%d%H") }}/{{ get_ics_data.external_model }}'
get_lbcs_data:
  execution:
    cores: 1
    walltime: 00:20:00
  external_model: RAP
  rundir: '{{ user.experiment_dir }}/{{ cycle.strftime("%Y%m%d%H") }}/{{ get_lbcs_data.external_model }}'
prepare_grib:
  ungrib:
    execution:
      batchargs:
        cores: 1
        walltime: 00:15:00
      envcmds:
        - source {{ user.mpas_app }}/load_wflow_modules.sh {{ user.platform }}
        - conda activate ungrib
      executable: ungrib
    gribfiles:
      interval_hours: 6
      max_leadtime: !int "{{ forecast.mpas.length }}"
      offset: 0
      path: '{{ user.experiment_dir }}/{{ cycle.strftime("%Y%m%d%H") }}/{{ get_lbcs_data.external_model }}/rap.t{cycle_hour:02d}z.wrfnatf{forecast_hour:02d}.grib2'
    rundir: '{{ user.experiment_dir }}/{{cycle.strftime("%Y%m%d%H")}}/ungrib'
    vtable: "{{ user.mpas_app }}/parm/ungrib/Vtable.raphrrr"
  platform:
    account: '{{ platform.account }}'
    scheduler: '{{ platform.scheduler }}'
create_ics:
  mpas_init: &mpas_init_config
    boundary_conditions:
      interval_hours: 6
      length: !int "{{ forecast.mpas.length }}"
      offset: 0
      path: "{{ prepare_grib.ungrib['rundir'] }}"
    execution:
      batchargs:
        cores: 768
        walltime: 01:30:00
      envcmds:
        - ulimit -s unlimited || true
        - module use {{ user.mpas_app }}/modulefiles
        - module load build_{{ user.platform }}_intel
      executable: "{{ user.mpas_app }}/exec/init_atmosphere_model"
      mpiargs:
        - "--ntasks={{ create_ics.mpas_init['execution']['batchargs']['cores']}}"
      mpicmd: srun
    files_to_copy: &mpas_init_files_to_copy
      "{{ user.mesh_label }}.static.nc": "{{ data.mesh_files }}/{{ user.mesh_label }}.static.nc"
      "{{ user.mesh_label }}.graph.info.part.{{create_ics.mpas_init['execution']['batchargs']['cores']}}": '{{ user.experiment_dir }}/{{ user.mesh_label }}.graph.info.part.{{create_ics.mpas_init["execution"]["batchargs"]["cores"]}}'
      stream_list.atmosphere.diagnostics: "{{ user.mpas_app }}/parm/mpas/stream_list.atmosphere.diagnostics"
      stream_list.atmosphere.output: "{{ user.mpas_app }}/parm/mpas/stream_list.atmosphere.output"
      stream_list.atmosphere.surface: "{{ user.mpas_app }}/parm/mpas/stream_list.atmosphere.surface"
    files_to_link: &mpas_init_files_to_link
      CAM_ABS_DATA.DBL: "{{ user.mpas_app }}/src/MPAS-Model/CAM_ABS_DATA.DBL"
      CAM_AEROPT_DATA.DBL: "{{ user.mpas_app }}/src/MPAS-Model/CAM_AEROPT_DATA.DBL"
      GENPARM.TBL: "{{ user.mpas_app }}/src/MPAS-Model/GENPARM.TBL"
      LANDUSE.TBL: "{{ user.mpas_app }}/src/MPAS-Model/LANDUSE.TBL"
      OZONE_DAT.TBL: "{{ user.mpas_app }}/src/MPAS-Model/OZONE_DAT.TBL"
      OZONE_LAT.TBL: "{{ user.mpas_app }}/src/MPAS-Model/OZONE_LAT.TBL"
      OZONE_PLEV.TBL: "{{ user.mpas_app }}/src/MPAS-Model/OZONE_PLEV.TBL"
      RRTMG_LW_DATA: "{{ user.mpas_app }}/src/MPAS-Model/RRTMG_LW_DATA"
      RRTMG_LW_DATA.DBL: "{{ user.mpas_app }}/src/MPAS-Model/RRTMG_LW_DATA.DBL"
      RRTMG_SW_DATA: "{{ user.mpas_app }}/src/MPAS-Model/RRTMG_SW_DATA"
      RRTMG_SW_DATA.DBL: "{{ user.mpas_app }}/src/MPAS-Model/RRTMG_SW_DATA.DBL"
      SOILPARM.TBL: "{{ user.mpas_app }}/src/MPAS-Model/SOILPARM.TBL"
      VEGPARM.TBL: "{{ user.mpas_app }}/src/MPAS-Model/VEGPARM.TBL"
      MP_TEMPO_QRacrQS_DATA.DBL: /mnt/lfs5/BMC/gsd-fv3-dev/mpas_dev/hrrr_fix/tables_tempo/MP_TEMPO_QRacrQS_DATA.DBL
      MP_TEMPO_freezeH2O_DATA.DBL: /mnt/lfs5/BMC/gsd-fv3-dev/mpas_dev/hrrr_fix/tables_tempo/MP_TEMPO_freezeH2O_DATA.DBL
      MP_TEMPO_QIautQS_DATA.DBL: /mnt/lfs5/BMC/gsd-fv3-dev/mpas_dev/hrrr_fix/tables_tempo/MP_TEMPO_QIautQS_DATA.DBL
      MP_TEMPO_HAILAWARE_QRacrQG_DATA.DBL: /mnt/lfs5/BMC/gsd-fv3-dev/mpas_dev/hrrr_fix/tables_tempo/MP_TEMPO_HAILAWARE_QRacrQG_DATA.DBL
    namelist:
      base_file: "{{ user.mpas_app }}/src/MPAS-Model/namelist.init_atmosphere"
      update_values: &mpas_init_update_values
        nhyd_model:
          config_init_case: 7
        dimensions:
          config_nvertlevels: 59
          config_nsoillevels: 9
          config_nfglevels: 51
          config_nfgsoillevels: 9
          config_nsoilcat: 16
          config_nvegopt: 2
        data_sources:
          config_geog_data_path: '/mnt/lfs5/BMC/wrfruc/HRRRv5/geog/'
          config_sfc_prefix: 'SST'
          config_fg_interval: !int "{{ create_ics.mpas_init['boundary_conditions']['interval_hours'] * 3600 }}"
          config_met_prefix: FILE
          config_landuse_data: 'MODIFIED_IGBP_MODIS_NOAH_15s'
          config_topo_data: 'GMTED2010'
          config_vegfrac_data: 'MODIS'
          config_albedo_data: 'MODIS'
          config_maxsnowalbedo_data: 'MODIS'
          config_supersample_factor: 3
          config_30s_supersample_factor: 1
          config_use_spechumd: true
          config_soilcat_data: 'BNU'
        vertical_grid:
          config_ztop: 25878.712
          config_nsmterrain: 1
          config_smooth_surfaces: true
          config_dzmin: 0.3
          config_nsm: 30
          config_tc_vertical_grid: true
          config_blend_bdy_terrain: true
          config_specified_zeta_levels: '/misc/whome/role.wrfruc/HRRRv5/fix/L60.txt'
        interpolation_control:
          config_extrap_airtemp: 'lapse-rate'
        preproc_stages:
          config_native_gwd_static: false
          config_static_interp: false
          config_vertical_grid: true
          config_met_interp: true
          config_input_sst: false
          config_frac_seaice: true
          config_tempo_rap: false
        decomposition:
          config_block_decomp_file_prefix: "{{ user.mesh_label }}.graph.info.part."
        physics_lsm_noahmp: !remove
    rundir: '{{ user.experiment_dir }}/{{ cycle.strftime("%Y%m%d%H") }}/mpas_ics'
    streams:
      input:
        filename_template: "{{ user.mesh_label }}.static.nc"
        input_interval: initial_only
        type: input
        mutable: false
        io_type: "pnetcdf,cdf5"
      output:
        filename_template: "{{ user.mesh_label }}.init.nc"
        output_interval: initial_only
        type: output
        mutable: false
        io_type: "pnetcdf,cdf5"
        packages: initial_conds
        clobber_mode: overwrite
  platform:
    account: '{{ platform.account }}'
    scheduler: '{{ platform.scheduler }}'
create_lbcs:
  mpas_init:
    <<: *mpas_init_config
    files_to_copy:
      <<: *mpas_init_files_to_copy
      "{{ user.mesh_label }}.init.nc": "{{ create_ics.mpas_init['rundir'] }}/{{ user.mesh_label }}.init.nc"
    namelist:
      base_file: "{{ user.mpas_app }}/src/MPAS-Model/namelist.init_atmosphere"
      update_values:
        <<: *mpas_init_update_values
        nhyd_model:
          config_init_case: 9
    rundir: '{{ user.experiment_dir }}/{{ cycle.strftime("%Y%m%d%H") }}/mpas_lbcs'
    streams:
      input:
        filename_template: "{{ user.mesh_label }}.init.nc"
        input_interval: initial_only
        type: input
        mutable: false
        io_type: "pnetcdf,cdf5"
      surface:
        filename_template: x1.40962.sfc_update.nc
        type: output
        filename_interval: "none"
        packages: sfc_update
        output_interval: "{{ 24 * 3600 }}"
        clobber_mode: overwrite
        mutable: false
      lbc:
        type: output
        filename_template: lbc.$Y-$M-$D_$h.$m.$s.nc
        filename_interval: output_interval
        packages: lbcs
        output_interval: 06:00:00
        mutable: false
  platform:
    account: '{{ platform.account }}'
    scheduler: '{{ platform.scheduler }}'
forecast:
  mpas:
    domain: regional
    execution:
      batchargs:
        cores: 800
        walltime: 02:30:00
      envcmds:
        - ulimit -s unlimited || true
        - module use {{ user.mpas_app }}/modulefiles
        - module load build_{{ user.platform }}_intel
      executable: "{{ user.mpas_app }}/exec/atmosphere_model"
      mpiargs:
        - "--ntasks={{ forecast.mpas['execution']['batchargs']['cores']}}"
      mpicmd: srun
    files_to_copy:
      "{{ user.mesh_label }}.init.nc": "{{ create_ics.mpas_init['rundir'] }}/{{ user.mesh_label }}.init.nc"
      "{{ user.mesh_label }}.graph.info.part.{{forecast.mpas['execution']['batchargs']['cores']}}": '{{ user.experiment_dir }}/{{ user.mesh_label }}.graph.info.part.{{forecast.mpas["execution"]["batchargs"]["cores"]}}'
      stream_list.atmosphere.diagnostics: "{{ user.mpas_app }}/parm/mpas/stream_list.atmosphere.diagnostics"
      stream_list.atmosphere.output: "{{ user.mpas_app }}/parm/mpas/stream_list.atmosphere.output"
      stream_list.atmosphere.surface: "{{ user.mpas_app }}/parm/mpas/stream_list.atmosphere.surface"
    files_to_link:
      <<: *mpas_init_files_to_link
      CCN_ACTIVATE.BIN: /misc/whome/role.wrfruc/HRRRv5/fix/CCN_ACTIVATE.BIN
      CCN_ACTIVATE_DATA: /misc/whome/role.wrfruc/HRRRv5/fix/CCN_ACTIVATE_DATA
    lateral_boundary_conditions:
      interval_hours: 6
      offset: 0
      path: "{{ create_lbcs.mpas_init['rundir'] }}"
    length: 6
    namelist:
      base_file: "{{ user.mpas_app }}/src/MPAS-Model/namelist.atmosphere"
      update_values:
        nhyd_model:
          config_time_integration_order: 2
          config_dt: 20.0
          config_split_dynamics_transport: true
          config_number_of_sub_steps: 4
          config_dynamics_split_steps: 3
          config_horiz_mixing: '2d_smagorinsky'
          config_len_disp: 3000.0
          config_visc4_2dsmag: 0.05
          config_scalar_advection: true
          config_monotonic: true
          config_coef_3rd_order: 0.25
          config_epssm: 0.1
          config_smdiv: 0.1
        damping:
          config_mpas_cam_coef: 2.0
          config_rayleigh_damp_u: true
          config_zd: 16000.0
          config_xnutr: 0.2
          config_number_cam_damping_levels: 8
        limited_area:
          config_apply_lbcs: true
        decomposition:
          config_block_decomp_file_prefix: "{{ user.mesh_label }}.graph.info.part."
        physics:
          config_sst_update: false
          config_gvf_update: false
          config_sstdiurn_update: false
          config_frac_seaice: true
          config_deepsoiltemp_update: false
          config_radtlw_interval: '00:15:00'
          config_radtsw_interval: '00:15:00'
          config_bucket_update: 'none'
          config_physics_suite: 'hrrrv5'
          config_tempo_aerosolaware: true
          config_tempo_hailaware: true
          config_gwdo_scheme: 'bl_ugwp_gwdo'
          config_lsm_scheme: 'sf_ruc'
          num_soil_layers: 9
          config_pbl_scheme: 'bl_mynnedmf'
        soundings:
          config_sounding_interval: 'none'
        assimilation:
          config_jedi_da: false
        physics_lsm_noahmp: !remove
    rundir: '{{ user.experiment_dir }}/{{ cycle.strftime("%Y%m%d%H") }}/forecast'
    streams:
      input:
        mutable: false
        type: input
        filename_template: "{{ user.mesh_label }}.init.nc"
        io_type: "pnetcdf,cdf5"
        input_interval: initial_only
      restart:
        mutable: false
        type: "input;output"
        filename_template: "restart.$Y-$M-$D_$h.$m.$s.nc"
        io_type: "pnetcdf,cdf5"
        input_interval: initial_only
        output_interval: "1_00:00:00"
        clobber_mode: overwrite
      output:
        mutable: true
        type: output
        filename_template: "history.$Y-$M-$D_$h.$m.$s.nc"
        output_interval: "06:00:00"
        files:
          - stream_list.atmosphere.output
        clobber_mode: overwrite
      diagnostics:
        mutable: true
        type: output
        filename_template: "diag.$Y-$M-$D_$h.$m.$s.nc"
        output_interval: "06:00:00"
        files:
          - stream_list.atmosphere.diagnostics
        clobber_mode: overwrite
      surface:
        mutable: true
        type: input
        filename_template: "x1.40962.sfc_update.nc"
        io_type: "pnetcdf,cdf5"
        filename_interval: "none"
        input_interval: "none"
        files:
          - stream_list.atmosphere.surface
      lbc_in:
        mutable: false
        type: input
        filename_template: "lbc.$Y-$M-$D_$h.$m.$s.nc"
        filename_interval: "input_interval"
        io_type: "pnetcdf,cdf5"
        packages: limited_area
        input_interval: 06:00:00
  platform:
    account: '{{ platform.account }}'
    scheduler: '{{ platform.scheduler }}'
post:
  mpassit:
    executable: "{{ user.mpas_app }}/exec/atmosphere_model/CCN_ACTIVATE.BIN"
    execution:
      batchargs:
        walltime: 00:30:00
        cores: 768
        native:
          - --exclusive 
    fix_dir: /path/to/fix/files
    rundir: '{{ user.experiment_dir }}/{{ cycle.strftime("%Y%m%d%H") }}/mpassit'
  upp:
    control_file: "{{ user.mpas_app }}/parm/upp/postxconfig-NT-rrfs_mpas.txt"
    files_to_link:
      post_cntrl.xml: "{{ user.mpas_app }}/parm/upp/rrfs_mpas_postcntrl.xml"
    files_to_copy:
      postxconfig-NT.txt: "{{ user.mpas_app }}/parm/upp/postxconfig-NT-rrfs_mpas.txt"
    execution:
      batchargs:
        nodes: 48
        tasks_per_node: 12
      mpiargs:
      - "--ntasks $SLURM_CPUS_ON_NODE"
