[tool.coverage.report]
exclude_also = ["if TYPE_CHECKING:"]
fail_under = 100
# omit = ["*/tests/*"]
show_missing = true
skip_covered = true

[tool.mypy]
check_untyped_defs = true
pretty = true
warn_return_any = true

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["ALL"]
ignore = [
#  "ANN001",  # missing-type-function-argument
#  "ANN002",  # missing-type-args
#  "ANN003",  # missing-type-kwargs
#  "ANN201",  # missing-return-type-class-method
#  "ANN202",  # missing-return-type-private-function
#  "ANN204",  # missing-return-type-special-method
#  "ANN401",  # any-type
#  "C408",    # unnecessary-collection-call
#  "C901",    # complex-structure
  "COM812",  # missing-trailing-comma
#  "D100",    # undocumented-public-module
#  "D101",    # undocumented-public-class
#  "D102",    # undocumented-public-method
#  "D103",    # undocumented-public-function
#  "D104",    # undocumented-public-package
#  "D105",    # undocumented-magic-method
#  "D107",    # undocumented-public-init
#  "D200",    # unnecessary-multiline-docstring
  "D203",    # incorrect-blank-line-before-class
  "D212",    # multi-line-summary-first-line
#  "D401",    # non-imperative-mood
#  "E731",    # lambda-assignment
#  "ERA001",  # commented-out-code
#  "FBT001",  # boolean-type-hint-positional-argument
#  "FBT002",  # boolean-default-value-positional-argument
#  "FLY002",  # static-join-to-f-string
#  "N813",    # camelcase-imported-as-lowercase
#  "PLR0911", # too-many-return-statements
#  "PLR0912", # too-many-branches
#  "PLR0913", # too-many-arguments
#  "S101",    # assert
#  "S603",    # subprocess-without-shell-equals-true
#  "T201",    # print
#  "UP031",   # printf-string-formatting
]

#[tool.ruff.lint.per-file-ignores]
#"tests/*" = [
#  "N802",    # invalid-function-name
#  "PLR2004", # magic-value-comparison
#  "PT013",   # pytest-incorrect-pytest-import
#  "SLF001",  # private-member-access
#]
