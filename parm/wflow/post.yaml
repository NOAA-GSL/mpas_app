workflow:
  tasks:
    metatask_post:
      var:
        fhr: "{% <<for h in range(0, forecast.mpas['length'] + 1, 6) %}{{ ' %03d' % h }}{% endfor %}"
      task_mpassit_#fhr#:
        account: "{{ platform.account }}"
        command: 'source &MPAS_APP;/load_wflow_modules.sh &PLATFORM; ; &MPAS_APP;/scripts/mpassit.sh
          -m {{ user.mpas_app }}/src/MPASSIT/modulefiles/build.{{ user.platform }}.intel
          -w {{ user.experiment_dir }}/${CYCLE}/mpassit
          -f #fhr#
          -i ${CYCLE}
          -x {{ post.mpassit["fix_dir"] }}
          -n {{ user.mpas_app }}/parm/mpassit
          -p {{ user.mpas_app }}/parm/mpassit
          -e {{ user.mpas_app }}/exec'
        envars:
          CYCLE:
            cyclestr:
              value: '@Y@m@d@H'
          INIT_DIR:
            cyclestr:
              value: '{{ user.experiment_dir }}/@Y@m@d@H/mpas_ics'
          FCST_DIR:
            cyclestr:
              value: '{{ user.experiment_dir }}/@Y@m@d@H/forecast'
          MESH_LABEL: '{{ user.mesh_label }}'
        join:
          cyclestr:
            value: '&LOGDIR;/{{ jobname }}_@Y@m@d@H.log'
        partition: "{{ post.mpassit.execution.batchargs.partition }}" 
        walltime: "{{ post.mpassit['execution']['batchargs']['walltime'] }}"
        cores: !int "{{ post.mpassit['execution']['batchargs']['cores'] }}"
        dependency:
          or:
            taskdep:
              attrs:
                task: mpas
            sh_find_files:
              attrs:
                shell: /bin/bash
              command:
                cyclestr:
                  value: 'fh=$((10##fhr# + 6 )) ; timestamp=$(date -d "@H:@M:@S @Y-@m-@d +$fh hour" "+%F_%T" ) ; find {{ user.experiment_dir }}/@Y@m@d@H/forecast/[dh]*.${timestamp}.nc 2>/dev/null |  test $(wc -l) == 2'

      task_upp_#fhr#:
        command: 'source &MPAS_APP;/load_wflow_modules.sh &PLATFORM; ; python &MPAS_APP;/scripts/upp.py'
        account: "{{ platform.account }}"
        join:
          cyclestr:
            value: '&LOGDIR;/{{ jobname }}_@Y@m@d@H.log'
        walltime: "{{ post.upp.execution.batchargs.walltime }}"
        nodes: "{{ post.upp.execution.batchargs.nodes }}:ppn={{ post.upp.execution.batchargs.tasks_per_node }}"
        partition: "{{ post.upp.execution.batchargs.partition }}"
        envars:
          CONFIG_PATH: '&EXPERIMENT_CONFIG;'
          CYCLE:
            cyclestr:
              value: "@Y-@m-@dT@H:@M:@S"
          LEAD: '#fhr#'
        dependency:
          taskdep:
            attrs:
              task: mpassit_#fhr#
